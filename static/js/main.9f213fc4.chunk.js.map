{"version":3,"sources":["components/Resume.js","components/Projects.js","components/AboutMe.js","components/HomePage.js","components/App.js","serviceWorker.js","index.js"],"names":["Resume","Container","Card","Img","src","fluid","Component","Projects","Jumbotron","className","Body","Tabs","defaultActiveKey","id","Tab","eventKey","title","AboutMe","bg","HomePage","Row","Col","sm","border","Header","Nav","variant","Item","Link","Content","Pane","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0VAIqBA,G,6KAMb,OACI,kBAACC,EAAA,EAAD,KAGY,kBAACC,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,IAAN,CAAUC,IAAI,0FAA0FC,OAAK,U,GAXrGC,c,gBCAfC,E,uKAMb,OACI,kBAACN,EAAA,EAAD,KACI,kBAACO,EAAA,EAAD,CAAWC,UAAU,eACb,kJACA,gIAER,kBAACP,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKQ,KAAN,KACI,kBAACC,EAAA,EAAD,CAAMC,iBAAiB,UAAUC,GAAG,4BAChC,kBAACC,EAAA,EAAD,CAAKC,SAAS,OAAOC,MAAM,QACvB,uCAEJ,kBAACF,EAAA,EAAD,CAAKC,SAAS,YAAYC,MAAM,aAC5B,uCAEJ,kBAACF,EAAA,EAAD,CAAKC,SAAS,WAAWC,MAAM,YAC3B,+C,GAtBMV,aCAjBW,E,uKAMb,OACI,kBAAChB,EAAA,EAAD,CAAWiB,GAAG,aACV,kBAACV,EAAA,EAAD,CAAWC,UAAU,eACb,8C,GATaH,aCGhBa,E,uKAMb,OACI,kBAAClB,EAAA,EAAD,CAAWQ,UAAU,OAKjB,kBAACK,EAAA,EAAIb,UAAL,CAAeW,iBAAiB,SAC5B,kBAACQ,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACT,kBAACpB,EAAA,EAAD,CAAMqB,OAAO,WACT,kBAACrB,EAAA,EAAKsB,OAAN,eACA,kBAACtB,EAAA,EAAKQ,KAAN,KACJ,kBAACe,EAAA,EAAD,CAAKC,QAAQ,QAAQjB,UAAU,eAC3B,kBAACgB,EAAA,EAAIE,KAAL,KACA,kBAACF,EAAA,EAAIG,KAAL,CAAUb,SAAS,SAAnB,aAEA,kBAACU,EAAA,EAAIE,KAAL,KACA,kBAACF,EAAA,EAAIG,KAAL,CAAUb,SAAS,UAAnB,aAGA,kBAACU,EAAA,EAAIE,KAAL,KACA,kBAACF,EAAA,EAAIG,KAAL,CAAUb,SAAS,SAAnB,oBAMJ,kBAACM,EAAA,EAAD,CAAKC,GAAI,GACT,kBAACpB,EAAA,EAAD,CAAMgB,GAAG,QACL,kBAAChB,EAAA,EAAKQ,KAAN,KACI,kBAACI,EAAA,EAAIe,QAAL,KACI,kBAACf,EAAA,EAAIgB,KAAL,CAAUf,SAAS,SACnB,kBAAC,EAAD,OAEA,kBAACD,EAAA,EAAIgB,KAAL,CAAUf,SAAS,UACnB,kBAAC,EAAD,OAEA,kBAACD,EAAA,EAAIgB,KAAL,CAAUf,SAAS,SACnB,kBAAC,EAAD,kB,GA5CET,aCkBvByB,EAhBH,kBACV,yBAAKtB,UAAU,cACb,kBAAC,IAAD,KAEE,yBAAKA,UAAU,2BACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOuB,OAAK,EAACC,KAAK,aAAaC,UAAWf,IAC1C,kBAAC,IAAD,CAAOa,OAAK,EAACC,KAAK,UAAUC,UAAWlC,IACvC,kBAAC,IAAD,CAAOgC,OAAK,EAACC,KAAK,YAAYC,UAAW3B,SCL/B4B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCTNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.9f213fc4.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Card, Container, Jumbotron, Image, Col} from 'react-bootstrap';\r\nimport '../App.css'\r\n\r\nexport default class Resume extends Component{\r\n\r\n    \r\n    \r\n\r\n    render(){\r\n        return (\r\n            <Container>\r\n                {/* <Jumbotron className=\"text-center\"> */}\r\n                    {/* will want to reduce the size of the resume image eventually */}\r\n                        <Card>\r\n                            <Card.Img src=\"https://raw.githubusercontent.com/pcassioppi/pages_files/gh-pages/resume/ResumeJPEG.jpg\" fluid/>\r\n                        </Card>\r\n                        \r\n                {/* </Jumbotron> */}\r\n            \r\n            </Container>\r\n        );\r\n    \r\n    }\r\n}","import React, {Component} from 'react';\r\nimport {Card, Container, Jumbotron, Col, Tabs, Tab} from 'react-bootstrap';\r\nimport '../App.css'\r\n\r\nexport default class Projects extends Component{\r\n\r\n    \r\n    \r\n\r\n    render(){\r\n        return (\r\n            <Container>\r\n                <Jumbotron className=\"text-center\">\r\n                        <div>Here are some brief summaries of a couple of personal projects I've done, and some of the technologies I've used.</div>\r\n                        <div>If you want to see more about a certain project, you can click their corresponding tabs below.</div>\r\n                </Jumbotron>\r\n                <Card >\r\n                    <Card.Body>\r\n                        <Tabs defaultActiveKey=\"profile\" id=\"uncontrolled-tab-example\">\r\n                            <Tab eventKey=\"home\" title=\"Main\">\r\n                                <div>Test1</div>\r\n                            </Tab>\r\n                            <Tab eventKey=\"SongSpots\" title=\"SongSpots\">\r\n                                <div>Test2</div>\r\n                            </Tab>\r\n                            <Tab eventKey=\"TopMusic\" title=\"TopMusic\">\r\n                                <div>Test3</div>\r\n                            </Tab>\r\n                        </Tabs>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Container>\r\n        );\r\n    \r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {Card, Container, Jumbotron, Col} from 'react-bootstrap';\r\nimport '../App.css'\r\n\r\nexport default class AboutMe extends Component{\r\n\r\n    \r\n    \r\n\r\n    render(){\r\n        return (\r\n            <Container bg=\"secondary\">\r\n                <Jumbotron className=\"text-center\">\r\n                        <h1>About Me</h1>\r\n                </Jumbotron>\r\n            \r\n            </Container>\r\n        );\r\n    \r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {Card, Container, Jumbotron, Col, Row, Tab, Nav, NavDropdown} from 'react-bootstrap';\r\nimport '../App.css'\r\nimport Resume from './Resume'\r\nimport Projects from './Projects'\r\nimport AboutMe from './AboutMe'\r\n\r\nexport default class HomePage extends Component{\r\n\r\n    \r\n    \r\n\r\n    render(){\r\n        return (\r\n            <Container className=\"p-4\">\r\n                {/* <Jumbotron className=\"text-center\">\r\n                        <h1>Welcome to My Website!</h1>\r\n                        <div>~please enjoy your stay~</div>        \r\n                </Jumbotron> */}\r\n                <Tab.Container defaultActiveKey=\"first\">\r\n                    <Row>\r\n                        <Col sm={3}>\r\n                        <Card border=\"primary\">\r\n                            <Card.Header> Menu </Card.Header>\r\n                            <Card.Body>\r\n                        <Nav variant=\"pills\" className=\"flex-column\">\r\n                            <Nav.Item>\r\n                            <Nav.Link eventKey=\"first\">About Me</Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                            <Nav.Link eventKey=\"second\">Projects</Nav.Link>\r\n                            </Nav.Item>\r\n                            \r\n                            <Nav.Item>\r\n                            <Nav.Link eventKey=\"third\">Full Resume</Nav.Link>\r\n                            </Nav.Item>\r\n                        </Nav>\r\n                        </Card.Body>\r\n                        </Card>\r\n                        </Col>\r\n                        <Col sm={9}>\r\n                        <Card bg=\"dark\">\r\n                            <Card.Body>\r\n                                <Tab.Content>\r\n                                    <Tab.Pane eventKey=\"first\">\r\n                                    <AboutMe />\r\n                                    </Tab.Pane>\r\n                                    <Tab.Pane eventKey=\"second\">\r\n                                    <Projects/>\r\n                                    </Tab.Pane>\r\n                                    <Tab.Pane eventKey=\"third\">\r\n                                    <Resume/>\r\n                                    </Tab.Pane>\r\n                                </Tab.Content>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        </Col>\r\n                        \r\n                    </Row>\r\n                </Tab.Container>\r\n            </Container>\r\n        );\r\n    \r\n    }\r\n}","import React from 'react';\nimport { Switch, Route, BrowserRouter as Router } from 'react-router-dom'\n\nimport Header from './Header'\nimport HomePage from './HomePage'\nimport Resume from './Resume'\nimport Projects from './Projects'\n// import './App.css';\n\nconst App = () => (\n  <div className=\"center w85\">\n    <Router>\n      {/* <Header /> */}\n      <div className=\"ph3 pv1 background-gray\">\n        <Switch>\n          <Route exact path=\"/portfolio\" component={HomePage} />\n          <Route exact path=\"/resume\" component={Resume} />\n          <Route exact path=\"/projects\" component={Projects} />\n\n        </Switch>\n      </div>\n    </Router>\n  </div>\n)\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}